name: CI

# Controls when the workflow will run
on: [push]
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
    # branches: [ main ]
  # pull_request:
  #   branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: install gcc for armv7
        run: |
          sudo apt-get update
          sudo apt-get -y install gcc-arm-linux-gnueabihf
      - name: install rustup
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source ~/.cargo/env
          rustup target add armv7-unknown-linux-gnueabihf
          cargo install cargo-bundle-licenses
      - name: check format
        run: |
          cargo fmt --check
      - name: unit test
        run: |
          cargo test
      - name: generate license file
        run: |
          cargo bundle-licenses --format json --output THIRDPARTY.json
      - name: build for x86_64
        run: |
          cargo build --release --target=x86_64-unknown-linux-gnu
      - name: build for armv7
        run: |
          cargo build --release --target=armv7-unknown-linux-gnueabihf
      - uses: actions/upload-artifact@v2
        with:
          name: piconfig2uboot_armv7
          path: target/armv7-unknown-linux-gnueabihf/release/piconfig2uboot
      - uses: actions/upload-artifact@v2
        with:
          name: piconfig2uboot_x86_64
          path: target/x86_64-unknown-linux-gnu/release/piconfig2uboot

  license:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: install rustup
        run: |
          curl https://sh.rustup.rs -sSf | sh -s -- -y
          source ~/.cargo/env
          cargo install cargo-bundle-licenses
      - name: generate license file
        run: |
          python3 create_license.py
      - uses: actions/upload-artifact@v2
        with:
          name: THIRD_PARTY_LIBRARY_LICENSES
          path: THIRD_PARTY_LIBRARY_LICENSES
